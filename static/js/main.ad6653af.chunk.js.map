{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["randomOneItem","itemsRandom","Math","floor","random","randomItems","numberPlayer","i","App","useState","map","setMap","players","setPlayers","playersSelect","setPlayersSelect","modStream","setModStream","onChange","name","value","styleContainer","height","width","backgroundColor","Container","fluid","style","className","Row","Col","xs","type","player1","event","preventDefault","target","player2","player3","player4","Button","color","onClick","setRandomMap","playersList","items","console","log","randomPlayerList","marginTop","marginBottom","src","0","1","2","Object","getOwnPropertyNames","length","3","4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6653af.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport \"./App.css\";\n\nconst setRandomMap = () => {\n  const random = Math.floor(Math.random() * (8 - 1) + 1);\n  switch (random) {\n    case 1:\n      return \"Tanglewood Street House\";\n    case 2:\n      return \"Edgefield Street House\";\n    case 3:\n      return \"Ridgeview Road House\";\n    case 4:\n      return \"Grafton Farmhouse\";\n    case 5:\n      return \"Bleadsdale Farmhouse\";\n    case 6:\n      return \"High school\";\n    case 7:\n      return \"Asylum\";\n  }\n};\nconst randomPlayerList = (players) => {\n  const numberPlayer = Math.floor(Math.random() * (5 - 1) + 1);\n\n  let playersList = {};\n\n  for (let i = 0; i <= numberPlayer; i++) {\n    const player = Math.floor(Math.random() * (5 - 1) + 1);\n\n    switch (player) {\n      case 1:\n        playersList = {\n          ...playersList,\n          player1: { name: players.player1, items: randomItems(numberPlayer) },\n        };\n\n        break;\n      case 2:\n        playersList = {\n          ...playersList,\n          player2: { name: players.player2, items: randomItems(numberPlayer) },\n        };\n        break;\n      case 3:\n        playersList = {\n          ...playersList,\n          player3: { name: players.player3, items: randomItems(numberPlayer) },\n        };\n        break;\n      case 4:\n        playersList = {\n          ...playersList,\n          player4: { name: players.player4, items: randomItems(numberPlayer) },\n        };\n        break;\n    }\n  }\n  console.log(playersList);\n  return playersList;\n};\n\nconst randomOneItem = () => {\n  let itemsRandom = {};\n  const random = Math.floor(Math.random() * (19 - 1) + 1);\n  switch (random) {\n    case 1:\n      itemsRandom = \"Spirit Box\";\n      break;\n    case 2:\n      itemsRandom = \"Ghost Writing Book\";\n      break;\n    case 3:\n      itemsRandom = \"Photo Camera\";\n      break;\n    case 4:\n      itemsRandom = \"EMF Reader\";\n      break;\n    case 5:\n      itemsRandom = \"Video Camera\";\n      break;\n    case 6:\n      itemsRandom = \"UV Flashlight\";\n      break;\n    case 7:\n      itemsRandom = \"Flashlight\";\n      break;\n    case 8:\n      itemsRandom = \"Candle\";\n      break;\n    case 9:\n      itemsRandom = \"Crucifix\";\n      break;\n    case 10:\n      itemsRandom = \"Glow Stick\";\n      break;\n    case 11:\n      itemsRandom = \"Infrared Light Sensor\";\n      break;\n    case 12:\n      itemsRandom = \"Tripod\";\n      break;\n    case 13:\n      itemsRandom = \"Motion Sensor\";\n      break;\n    case 14:\n      itemsRandom = \"Parabolic Microphone\";\n      break;\n    case 15:\n      itemsRandom = \"Salt Shaker\";\n      break;\n    case 16:\n      itemsRandom = \"Thermometer\";\n      break;\n    case 17:\n      itemsRandom = \"Smudge Sticks\";\n      break;\n    case 18:\n      itemsRandom = \"Sound Sensor\";\n      break;\n    case 19:\n      itemsRandom = \"Strong Flashlight\";\n      break;\n  }\n  return itemsRandom;\n};\n\nconst randomItems = (numberPlayer) => {\n  let itemsRandom = {};\n  if (numberPlayer > 1) {\n    for (let i = 0; i <= 2; i++) {\n      const random = Math.floor(Math.random() * (19 - 1) + 1);\n      switch (random) {\n        case 1:\n          itemsRandom = { ...itemsRandom, [i]: \"Spirit Box\" };\n          break;\n        case 2:\n          itemsRandom = { ...itemsRandom, [i]: \"Ghost Writing Book\" };\n          break;\n        case 3:\n          itemsRandom = { ...itemsRandom, [i]: \"Photo Camera\" };\n          break;\n        case 4:\n          itemsRandom = { ...itemsRandom, [i]: \"EMF Reader\" };\n          break;\n        case 5:\n          itemsRandom = { ...itemsRandom, [i]: \"Video Camera\" };\n          break;\n        case 6:\n          itemsRandom = { ...itemsRandom, [i]: \"UV Flashlight\" };\n          break;\n        case 7:\n          itemsRandom = { ...itemsRandom, [i]: \"Flashlight\" };\n          break;\n        case 8:\n          itemsRandom = { ...itemsRandom, [i]: \"Candle\" };\n          break;\n        case 9:\n          itemsRandom = { ...itemsRandom, [i]: \"Crucifix\" };\n          break;\n        case 10:\n          itemsRandom = { ...itemsRandom, [i]: \"Glow Stick\" };\n          break;\n        case 11:\n          itemsRandom = { ...itemsRandom, [i]: \"Infrared Light Sensor\" };\n          break;\n        case 12:\n          itemsRandom = { ...itemsRandom, [i]: \"Tripod\" };\n          break;\n        case 13:\n          itemsRandom = { ...itemsRandom, [i]: \"Motion Sensor\" };\n          break;\n        case 14:\n          itemsRandom = { ...itemsRandom, [i]: \"Parabolic Microphone\" };\n          break;\n        case 15:\n          itemsRandom = { ...itemsRandom, [i]: \"Salt Shaker\" };\n          break;\n        case 16:\n          itemsRandom = { ...itemsRandom, [i]: \"Thermometer\" };\n          break;\n        case 17:\n          itemsRandom = { ...itemsRandom, [i]: \"Smudge Sticks\" };\n          break;\n        case 18:\n          itemsRandom = { ...itemsRandom, [i]: \"Sound Sensor\" };\n          break;\n        case 19:\n          itemsRandom = { ...itemsRandom, [i]: \"Strong Flashlight\" };\n          break;\n      }\n    }\n  } else {\n    for (let i = 0; i <= 4; i++) {\n      const random = Math.floor(Math.random() * (19 - 1) + 1);\n      switch (random) {\n        case 1:\n          itemsRandom = { ...itemsRandom, [i]: \"Spirit Box\" };\n          break;\n        case 2:\n          itemsRandom = { ...itemsRandom, [i]: \"Ghost Writing Book\" };\n          break;\n        case 3:\n          itemsRandom = { ...itemsRandom, [i]: \"Photo Camera\" };\n          break;\n        case 4:\n          itemsRandom = { ...itemsRandom, [i]: \"EMF Reader\" };\n          break;\n        case 5:\n          itemsRandom = { ...itemsRandom, [i]: \"Video Camera\" };\n          break;\n        case 6:\n          itemsRandom = { ...itemsRandom, [i]: \"UV Flashlight\" };\n          break;\n        case 7:\n          itemsRandom = { ...itemsRandom, [i]: \"Flashlight\" };\n          break;\n        case 8:\n          itemsRandom = { ...itemsRandom, [i]: \"Candle\" };\n          break;\n        case 9:\n          itemsRandom = { ...itemsRandom, [i]: \"Crucifix\" };\n          break;\n        case 10:\n          itemsRandom = { ...itemsRandom, [i]: \"Glow Stick\" };\n          break;\n        case 11:\n          itemsRandom = { ...itemsRandom, [i]: \"Infrared Light Sensor\" };\n          break;\n        case 12:\n          itemsRandom = { ...itemsRandom, [i]: \"Tripod\" };\n          break;\n        case 13:\n          itemsRandom = { ...itemsRandom, [i]: \"Motion Sensor\" };\n          break;\n        case 14:\n          itemsRandom = { ...itemsRandom, [i]: \"Parabolic Microphone\" };\n          break;\n        case 15:\n          itemsRandom = { ...itemsRandom, [i]: \"Salt Shaker\" };\n          break;\n        case 16:\n          itemsRandom = { ...itemsRandom, [i]: \"Thermometer\" };\n          break;\n        case 17:\n          itemsRandom = { ...itemsRandom, [i]: \"Smudge Sticks\" };\n          break;\n        case 18:\n          itemsRandom = { ...itemsRandom, [i]: \"Sound Sensor\" };\n          break;\n        case 19:\n          itemsRandom = { ...itemsRandom, [i]: \"Strong Flashlight\" };\n          break;\n      }\n    }\n  }\n\n  return itemsRandom;\n};\n\nfunction App() {\n  const [map, setMap] = useState(\"\");\n  const [players, setPlayers] = useState({});\n  const [playersSelect, setPlayersSelect] = useState({});\n  const [modStream, setModStream] = useState(\"black\");\n\n  const onChange = (name, value) => {\n    setPlayers({ ...players, [name]: value });\n  };\n\n  const styleContainer = {\n    height: \"100vh\",\n    width: \"100vw\",\n    backgroundColor: modStream,\n  };\n\n  return (\n    <Container fluid={true} style={styleContainer} className=\"App\">\n      <Row className=\"align-items-start justify-content-center \">\n        <Col xs=\"12\" className=\"align-self-center\">\n          <label className=\"margeR\">\n            Player 1 :\n            <input\n              className=\"input\"\n              type=\"text\"\n              value={players.player1}\n              onChange={(event) => {\n                event.preventDefault();\n                onChange(\"player1\", event.target.value);\n              }}\n            />\n          </label>\n          <label className=\"margeR\">\n            Player 2 :\n            <input\n              className=\"input\"\n              type=\"text\"\n              value={players.player2}\n              onChange={(event) => {\n                event.preventDefault();\n                onChange(\"player2\", event.target.value);\n              }}\n            />\n          </label>\n          <label className=\"margeR\">\n            Player 3 :\n            <input\n              className=\"input\"\n              type=\"text\"\n              value={players.player3}\n              onChange={(event) => {\n                event.preventDefault();\n                onChange(\"player3\", event.target.value);\n              }}\n            />\n          </label>\n          <label className=\"margeR\">\n            Player 4 :\n            <input\n              className=\"input\"\n              type=\"text\"\n              value={players.player4}\n              onChange={(event) => {\n                event.preventDefault();\n                onChange(\"player4\", event.target.value);\n              }}\n            />\n          </label>\n          <Row className=\"align-items-center justify-content-center\">\n            <Col xs=\"12\">\n              <Button color=\"info\" onClick={() => setMap(setRandomMap())}>\n                Set Map\n              </Button>\n              <Button\n                color=\"info\"\n                onClick={() => {\n                  setPlayersSelect({});\n                  setPlayersSelect(randomPlayerList(players));\n                }}\n              >\n                Randomazer !\n              </Button>\n              <Button\n                color=\"info\"\n                onClick={() => {\n                  if (modStream === \"black\") {\n                    return setModStream(\"rgb(0, 250, 0\");\n                  } else {\n                    return setModStream(\"black\");\n                  }\n                }}\n              >\n                stream\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col\n          xs=\"12\"\n          className=\"align-self-center\"\n          style={{ marginTop: \"10px\" }}\n        >\n          <h2>{map}</h2>\n        </Col>\n        <Col>\n          {playersSelect.player1 && (\n            <Row style={{ marginBottom: \"1em\" }}>\n              <Col xs=\"2\">\n                <b>{playersSelect.player1.name}</b>\n              </Col>\n              <Col xs=\"10\">\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player1.items[0]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player1: {\n                            name: playersSelect.player1.name,\n                            items: {\n                              ...playersSelect.player1.items,\n                              0: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player1.items[1]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player1: {\n                            name: playersSelect.player1.name,\n                            items: {\n                              ...playersSelect.player1.items,\n                              1: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player1.items[2]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player1: {\n                            name: playersSelect.player1.name,\n                            items: {\n                              ...playersSelect.player1.items,\n                              2: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                {Object.getOwnPropertyNames(playersSelect).length <= 1 && (\n                  <div>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player1.items[3]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player1: {\n                                name: playersSelect.player1.name,\n                                items: {\n                                  ...playersSelect.player1.items,\n                                  3: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player1.items[4]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player1: {\n                                name: playersSelect.player1.name,\n                                items: {\n                                  ...playersSelect.player1.items,\n                                  4: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                  </div>\n                )}\n              </Col>\n            </Row>\n          )}\n          {playersSelect.player2 && (\n            <Row style={{ marginBottom: \"1em\" }}>\n              <Col xs=\"2\">\n                <b>{playersSelect.player2.name}</b>\n              </Col>\n              <Col xs=\"10\">\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player2.items[0]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player2: {\n                            name: playersSelect.player2.name,\n                            items: {\n                              ...playersSelect.player2.items,\n                              0: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player2.items[1]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player2: {\n                            name: playersSelect.player2.name,\n                            items: {\n                              ...playersSelect.player2.items,\n                              1: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player2.items[2]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player2: {\n                            name: playersSelect.player2.name,\n                            items: {\n                              ...playersSelect.player2.items,\n                              2: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              {Object.getOwnPropertyNames(playersSelect).length <= 1 && (\n                <div>\n                  <Row>\n                    <Col xs=\"3\">\n                      <b>- {playersSelect.player2.items[3]}</b>\n                    </Col>\n                    <Col>\n                      <img\n                        src=\"refresh.svg\"\n                        style={{ width: \"15px\", height: \"15px\" }}\n                        onClick={() => {\n                          const items = {\n                            ...playersSelect,\n                            player2: {\n                              name: playersSelect.player2.name,\n                              items: {\n                                ...playersSelect.player2.items,\n                                3: randomOneItem(),\n                              },\n                            },\n                          };\n                          setPlayersSelect(items);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs=\"3\">\n                      <b>- {playersSelect.player2.items[4]}</b>\n                    </Col>\n                    <Col>\n                      <img\n                        src=\"refresh.svg\"\n                        style={{ width: \"15px\", height: \"15px\" }}\n                        onClick={() => {\n                          const items = {\n                            ...playersSelect,\n                            player2: {\n                              name: playersSelect.player2.name,\n                              items: {\n                                ...playersSelect.player2.items,\n                                4: randomOneItem(),\n                              },\n                            },\n                          };\n                          setPlayersSelect(items);\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </div>\n              )}\n            </Row>\n          )}\n          {playersSelect.player3 && (\n            <Row style={{ marginBottom: \"1em\" }}>\n              <Col xs=\"2\">\n                <b>{playersSelect.player3.name}</b>\n              </Col>\n              <Col xs=\"10\">\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player3.items[0]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player3: {\n                            name: playersSelect.player3.name,\n                            items: {\n                              ...playersSelect.player3.items,\n                              0: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player3.items[1]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player3: {\n                            name: playersSelect.player3.name,\n                            items: {\n                              ...playersSelect.player3.items,\n                              1: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player3.items[2]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player3: {\n                            name: playersSelect.player3.name,\n                            items: {\n                              ...playersSelect.player3.items,\n                              2: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                {Object.getOwnPropertyNames(playersSelect).length <= 1 && (\n                  <div>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player3.items[3]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player3: {\n                                name: playersSelect.player3.name,\n                                items: {\n                                  ...playersSelect.player3.items,\n                                  3: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player3.items[4]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player3: {\n                                name: playersSelect.player3.name,\n                                items: {\n                                  ...playersSelect.player3.items,\n                                  4: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                  </div>\n                )}\n              </Col>\n            </Row>\n          )}\n          {playersSelect.player4 && (\n            <Row\n              style={{ marginBottom: \"1em\" }}\n              style={{ marginBottom: \"20px\" }}\n            >\n              <Col xs=\"2\">\n                <b>{playersSelect.player4.name}</b>\n              </Col>\n              <Col xs=\"10\">\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player4.items[0]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player4: {\n                            name: playersSelect.player4.name,\n                            items: {\n                              ...playersSelect.player4.items,\n                              0: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player4.items[1]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player4: {\n                            name: playersSelect.player4.name,\n                            items: {\n                              ...playersSelect.player4.items,\n                              1: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"3\">\n                    <b>- {playersSelect.player4.items[2]}</b>\n                  </Col>\n                  <Col>\n                    <img\n                      src=\"refresh.svg\"\n                      style={{ width: \"15px\", height: \"15px\" }}\n                      onClick={() => {\n                        const items = {\n                          ...playersSelect,\n                          player4: {\n                            name: playersSelect.player4.name,\n                            items: {\n                              ...playersSelect.player4.items,\n                              2: randomOneItem(),\n                            },\n                          },\n                        };\n                        setPlayersSelect(items);\n                      }}\n                    />\n                  </Col>\n                </Row>\n                {Object.getOwnPropertyNames(playersSelect).length <= 1 && (\n                  <div>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player4.items[3]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player4: {\n                                name: playersSelect.player4.name,\n                                items: {\n                                  ...playersSelect.player4.items,\n                                  3: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xs=\"3\">\n                        <b>- {playersSelect.player4.items[4]}</b>\n                      </Col>\n                      <Col>\n                        <img\n                          src=\"refresh.svg\"\n                          style={{ width: \"15px\", height: \"15px\" }}\n                          onClick={() => {\n                            const items = {\n                              ...playersSelect,\n                              player4: {\n                                name: playersSelect.player4.name,\n                                items: {\n                                  ...playersSelect.player4.items,\n                                  4: randomOneItem(),\n                                },\n                              },\n                            };\n                            setPlayersSelect(items);\n                          }}\n                        />\n                      </Col>\n                    </Row>\n                  </div>\n                )}\n              </Col>\n            </Row>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}